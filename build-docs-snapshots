#!/bin/sh

BASEDIR=/local/src/phpdoc-all/
TIMESTAMP=`/bin/date +%Y-%M-%d-%H`
PHDROOT=/local/src/phd
LOGFOLDER=/local/logs/docs/
OUTPUTFOLDER=/local/building/
DOCSWEB=/local/Web/sites/docs.php.net/
PHP=/usr/bin/php


HOUR=`/bin/date +%H`

# Only run this 4 times a day, or when explicitly given an force argument
if [ `expr $HOUR % 6` -ne 0 ]; then
	if [ $# -ne 1 ]; then
		exit 0
	fi
fi

configure()
{
	lang=$1
	outputfile=$2 

	echo "====> Configuring $lang" > $LOGFILE
	pushd $BASEDIR
	$PHP doc-base/configure.php --with-lang=$lang --output=$outputfile --disable-segfault-speed > $LOGFILE
	if [ "$?" -ne 0 ]; then
		broken_lang $lang
		popd
		return 187
	fi
	popd
	echo "====> Done configuring" > $LOGFILE
}

build()
{
	lang=$1
	docbook=$2
	out=$OUTPUTFOLDER/$lang

	echo "====> Building $lang" > $LOGFILE
	pushd $PHDROOT
	rm -rf $out

	$PHP -dmemory_limit=1024M render.php -P PHP -d $docbook -f xhtml -f bigxhtml -f php -f tocfeed --output $out > $LOGFILE
	popd
	echo "====> Done building $lang" > $LOGFILE
}

move()
{
	lang=$1
	out=$OUTPUTFOLDER/$lang

	echo "====> Moving $lang" > $LOGFILE
	mv -f $out/php-web $DOCSWEB/manual/$lang
	echo "====> Done" > $LOGFILE
}


warning()
{
	echo "=============> Something happenend when snapshotting $1" > $LOGFILE
	echo $2 > $LOGFILE
	echo "=============> Please have a look!" > $LOGFILE
}
broken_lang ()
{
	warning $1 "Failed completely"
	# Send mail?
}

pushd $BASEDIR
for i in `/bin/ls -1 | grep -v doc-base`; do 
	mkdir $LOGFOLDER/$TIMESTAMP
	if [ -d $i ]; then
		XMLFILENAME=$BASEDIR/doc-base/$TIMESTAMP-$i.xml
		LOGFILE=$LOGFOLDER/$TIMESTAMP/$i.txt

		configure $i $XMLFILENAME
		if [ "$?" -gt 0 ]; then
			warning $i "Failed configuring $i"
			continue
		fi

		build $i $XMLFILENAME
		if [ "$?" -gt 0 ]; then
			warning $i "Failed building $i"
			continue
		fi

		move $i
		if [ "$?" -gt 0 ]; then
			warning $i "Failed moving $i"
			continue
		fi
	fi
done
popd
